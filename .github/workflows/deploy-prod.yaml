name: Deploy Latest tag

on:
  release:
    types: [published, created, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  Build-Status-Reports:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: ${{ steps.deploy.outputs.vm_url}}
    outputs:
      latest_tag: ${{ steps.latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Latest Release Tag
        id: latest_tag
        run: |
          LATEST_TAG=$(curl --silent -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name')
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Generate .env and repo_env
        run: |
          chmod +x scripts/generate-build-env.sh
          ./scripts/generate-build-env.sh
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_JIRA_INTEGRATIONS }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_JIRA_INTEGRATIONS }}
          VITE_COMMIT_SHA: ${{ github.sha }}
          VITE_AUTH_SERVER_URL: ${{ vars.VITE_AUTH_SERVER_URL }}
          VITE_JIRA_CLIENT_ID: ${{ vars.VITE_JIRA_CLIENT_ID }}
          VITE_JIRA_SCOPE: ${{ vars.VITE_JIRA_SCOPE }}
          VITE_JIRA_CALLBACK_URL: ${{ vars.VITE_JIRA_CALLBACK_URL }}
          VITE_JIRA_API_URL: ${{ vars.VITE_JIRA_API_URL }}
          VITE_STATUS_REPORTS_ENV: prod
          VITE_JIRA_APP_KEY: jira-mcp-auth-bridge

      - id: deploy
        name: Deploy
        uses: bitovi/github-actions-deploy-docker-to-ec2@v1
        with:
          checkout: false
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_JIRA_INTEGRATIONS}}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_JIRA_INTEGRATIONS}}
          aws_default_region: us-east-1

          aws_resource_identifier: bitovi-jira-mcp-auth-bridge-prod
          tf_state_bucket: bitovi-jira-mcp-auth-bridge-prod-tf-state
          tf_state_bucket_destroy: true

          aws_r53_enable: true
          aws_r53_create_sub_cert: true
          aws_r53_sub_domain_name: jira-mcp-auth-bridge
          aws_r53_domain_name: bitovi.tools
          aws_elb_app_port: 3000

          docker_full_cleanup: true

          aws_ec2_instance_type: t3.small
          aws_ec2_instance_root_vol_size: 16

          repo_env: repo_env
          env_ghs: ${{ secrets.DOT_ENV }}

      - name: Skip deployment
        if: ${{ github.ref_name != steps.latest_tag.outputs.latest_tag }}
        run: echo "This is not the latest tag. Deployment skipped."
